FROM python:3.9-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    tesseract-ocr \
    tesseract-ocr-eng \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    wget \
    git \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Set the working directory to where app.py is located
WORKDIR /app/srs_analyzer

# Copy ONLY requirements.txt first (for better Docker layer caching)
COPY srs_analyzer/requirements.txt ./requirements.txt

# Upgrade pip and install core dependencies first
RUN pip install --upgrade pip setuptools wheel

# Install dependencies in stages to avoid conflicts
RUN pip install --no-cache-dir numpy==1.22.4
RUN pip install --no-cache-dir torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
RUN pip install --no-cache-dir scikit-learn==1.1.3
RUN pip install --no-cache-dir transformers
RUN pip install --no-cache-dir -r requirements.txt

# Copy the entire services directory structure AFTER installing dependencies
COPY . /app

# Download NLTK data
RUN python -c "import nltk; nltk.download('punkt'); nltk.download('averaged_perceptron_tagger'); nltk.download('stopwords')" || true

# Create necessary directories with proper permissions
RUN mkdir -p ./uploads ./logs /app/output_results /output_results

# Set ownership for user 1001 (docker-compose user)
RUN chown -R 1001:1001 /app
RUN chmod -R 755 /app

EXPOSE 5000

# Set environment variables
ENV FLASK_APP=app.py
ENV FLASK_ENV=development
ENV PYTHONPATH=/app

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:5000/ || exit 1

CMD ["python", "app.py"] 